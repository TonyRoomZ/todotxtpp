
.container-fluid
  .row-fluid
    .col-sm-4.col-sm-offset-8
      #search-bar


.container-fluid
  .row-fluid
    .col-sm-2.col-no-padding
      #sidebar
        ul
          li 
            a(href="#",data-name="all") All
          li
            a(href="#here",data-name="here") Here
    .col-sm-10.col-no-padding
      #ace-editor
.container-fluid
  .row-fluid
    .col-sm-2.col-sm-offset-10
      button.btn-md.btn-info#save-btn(onclick="saveFile()")
        i.fa.fa-floppy-o.fa-2x
        | Save

script.
  var modified = false;

  window.onbeforeunload = function(){
    if (modified){
      return 'You have changes that have not yet been saved to Dropbox. If you leave, any unsaved changes will be lost.';
    }
    return;
  }

  var editor;
  $(document).ready(function(){
    var editor = Todotxt.setEditor(ace.edit("ace-editor"));

    editor.getSession().setMode("ace/mode/todotxt");
    editor.setShowPrintMargin(false);
    editor.getSession().setUseWrapMode('free');

    Todotxt.getList(function(err, data){
      if (err){
        $(document).trigger("add-alerts", [
          {
            'message': "Unable to load file from Dropbox. Please try again later.",
            'priority': 'error'
          }
        ]);
        return;
      }

      editor.setValue(data.text, -1);
      modified = false;
      editor.getSession().on('change', function(e) {
        modified=true;
      });
    }, true);
  });
    
  registerCheck();

  /**
   * Register a periodic check to ensure the version on Dropbox hasn't updated
   * beyond the version that we have. If it has and we've modified, show a 
   * persistent error. If it has and we haven't modified, just update to the 
   * latest remote version.
   **/
  function registerCheck(){
    window.setInterval(function(){
      if (!Todotxt.getRevision()){
        // There's nothing we can do yet.
        return;
      }
      $.ajax('/revision')
      .done(function(rev){
        console.log("Checking rev");
        if (rev > Todotxt.getRevision()){
          if (modified){
            // The remote version is more recent.
            // Clear classes
            $('#persAlerts').attr('class', 'alert alert-danger');            
            $('#persAlerts').text('The remote Todo file has been updated. Your local changes cannot be saved. Please refresh the page to view the updates and discard your local changes.');                          
          } else{
            Todotxt.getList(function(err, data){
              if (err){
                $(document).trigger("add-alerts", [
                  {
                    'message': "Unable to load file from Dropbox. Please try again later.",
                    'priority': 'error'
                  }
                ]);
                return;
              }

              editor.setValue(data.text, -1);
              modified = false;
              editor.getSession().on('change', function(e) {
                modified=true;
              });
            }, true);
          }
        }
      });
    }, 15000);
  }

  saveFile = function(){
    $('#save-btn').prop('disabled', true);
    Todotxt.save(function(err, data){
      
      $('#save-btn').prop('disabled', false);

      if (err){
        $(document).trigger("add-alerts", [
          {
            'message': "Error saving file: " + status,
            'priority': 'error'
          }
        ]);
        return;
      }

      if (data && data.errors && data.errors.length > 0){
        $(document).trigger("add-alerts", [
          {
            'message': data.errors[0],
            'priority': 'error'
          }
        ]);
        return;
      }

      modified = false;
      $(document).trigger("add-alerts", [
        {
          'message': "Saved successfully.",
          'priority': 'info'
        }
      ]);
    });
  }


  
